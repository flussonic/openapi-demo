get:
  operationId: streams_list
  summary: List streams
  description: |
    This API method is one of the most important in whole API, because it gives the list of all streams,
    including:

    * configured (may not be running at the moment)
    * running (including those that are created via a template and do not have own disk configuration)
    * remote (available from other servers)
    * only recorded

    Together with the `stream_save` method you can manage streams in Flussonic.

    You can pass all stream configuration options to query string for filtering, not only specified in the parameters.

    This method and `stream_get` will return `effective stream configuration` with all templates, defaults
    included into this response. It is not exactly what you can see in the disk config. If you have configured
    this stream in the disk file, then the original disk configuration can be found in the field `config_on_disk`.

    What you get from this API call is not what you write to `stream_save`.

  parameters:
  - name: select
    description: Comma-separated list of fields (including nested) that will be
      returned.
    explode: false
    in: query
    required: false
    schema:
      example: name,inputs,stats,dvr.root
      type: string
    style: form
  - name: sort
    description: |
      Composite sort direction.
      Default sort order is `named_by (config,user,remote)`, `position`, `name`.
    explode: false
    in: query
    required: false
    schema:
      example: -stats.bitrate,name,position
      type: string
    style: form
  - name: limit
    description: Limit select count in collection to N elements.  Default value is 100.
    explode: false
    in: query
    required: false
    schema:
      type: integer
      example: 100
    style: form
  - name: cursor
    description: |
      Properly encoded analog of offset, allowing to read next bunch of items. 
      We do not offer common `offset` fields, use please cursor for predictable
      fetching of quickly changing list of items. More information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors)
    in: query
    required: false
    schema:
      type: string
      example: 'JTI0cG9zaXRpb25fZ3Q9MQ=='
  - name: q
    description: Search pattern for different fields like name, title, urls, etc.
    in: query
    required: false
    schema:
      type: string
      example: somepattern
  - name: Accept
    description: |
      Ask for 'application/openmetrics-text' to get response with openmetrics-text content.
      Ask for 'text/plain' to get response with text content; applicable only for text view of Prometheus openmetrics and can be used only with appropriate 'format' option.
      By default it will be `application/json`.
    in: header
    schema:
      type: string
  - name: format
    description: This parameter is used instead of the Accept header to select of non-JSON response content format.
    in: query
    required: false
    schema:
      type: string
      oneOf:
        - title: Openmetrics
          const: openmetrics
          description: The openmetrics-text content format will be used in response.
      example: openmetrics
  responses:
    '200':
      description: Response
      content:
        application/json:
          schema:
            $ref: '../../components/schemas.yml#/streams_list'
        application/openmetrics-text:
          schema:
            type: string
            description: |
              Responses content format used for Prometheus application.
              Additional information about it can be found at:
              - https://github.com/Prometheus/docs/blob/main/content/docs/instrumenting/exposition_formats.md#openmetrics-text-format
              - https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md
          examples:
            default:
              summary: 'General example'
              description: The example describes the rule how the response string forms. 
              value: 'metric{label="value"} VALUE'
            bitrate:
              value: 'stream_bitrate{server_id="123e4567-e89b-12d3-a456-426614174000",name="mystream"} 1000'
            online_clients:
              value: 'stream_online_clients{server_id="123e4567-e89b-12d3-a456-426614174000",name="mystream"} 1000'
        text/plain:
          schema:
            type: string
            description: Responses content format used for receiving openmetrics for Prometheus application as a text.
  tags:
  - stream
post:
  x-scope:
    - cloud
  operationId: stream_create
  summary: Create stream
  description: |
    Create stream with autogenerated steam name.
    Cloud stream name will be returned in response.
    Note: property name in request body not required and will be ignored.
    If project_id passed in request body stream will created in specified project,
    otherwise in default project.
    Recommended set header Idempotency-Key with uuid4 as value, this will avoid 
    duplication of streams with repeated requests.

  parameters:
  - name: Idempotency-Key
    in: header
    description: |
      An idempotency key is a unique value generated by the client which 
      the server uses to recognize subsequent retries of the same request.
    required: false
    schema:
      type: string
      format: uuid
  requestBody:
    description: Stream configuration
    content:
      application/json:
        schema:
          $ref: '../../components/schemas.yml#/stream_config'
  responses:
    '201':
      description: Created stream
      content:
        application/json:
          schema:
            $ref: '../../components/schemas.yml#/stream_config'
    '402':
      description: |
        Reached limit of streams.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas.yml#/error_response'
  tags:
  - stream
