type: object
properties:
  vendor:
    description: |
      DRM vendor. DRM (Digital Rights Management) is a content protection method where the content is encrypted and decrypted 
      by a pair of keys that are generated by the key server of the DRM system.

      Flussonic supports the following DRM systems: EzDRM, DRM Conax, DRM Conax for Nagra, BuyDRM (KeyOS), Widevine, PallyCon, Irdeto, PlayReady DRM, GS DRM, Solocoo
    externalDocs:
      description: Find more information here.
      url: https://flussonic.com/doc/content-protection-with-drm
    type: string
    x-atom: true
    x-notice: aes128 | ezdrm | keyos | conax | pallycon | gsdrm
    example: aes128
  keyserver:
    description: DRM key server.
    type: string
    nullable: true
    example: 'https://keyserver1.mycompany.com'
  user_keyserver:
    description: The URL sent to the client for watching the content. Used for Verimatrix DRM.
    type: string
    nullable: true
    example: 'https://public-keyserver.mycompany.com'
  resource_id:
    description: |
      The ID of a resource (a stream or a VOD file) in DRM system, usually it is a UUID.
      The DRM system keeps track of viewing each resource by clients.

      A resource ID is automatically generated for each stream or VOD file by Flussonic but it changes after renaming. 
      It is possible to set it manually to attach a stream to a particular resource or to combine several streams into one.
    type: string
    format: drm_resource_id
    nullable: true
    example: 'L2sItm6'
  expires:
    description: |
      Key rotation interval, in minutes.

      By default, Flussonic does not rotate enryption keys. 
      Specify this parameter to enable encryption key rotation and thus to provide a better securtiy.
    type: integer
    nullable: true
  encryption:
    description: |
      If this parameter is set to `full`, all frames are encrypted. 
      If it is set to `sparse` (or empty), only the keyframes are encrypted.

      By default, Flussonic encrypts only key frames. In most cases this is enough to protect the stream from an unauthorized access. 
      It also reduces the power consumption, when decrypting on the client side. 
      However, some Smart TVs and STBs require all frames to be encrypted. 
    type: string
    nullable: true
  aes_key:
    description: |
      AES (Advanced Encryption Standard) key. Used for Widevine DRM.
    type: string
    nullable: true
  content_id:
    description: |
      A unique identifier of the content, used for Widevine DRM.
      By default, it is equal to the stream name.
    type: string
    nullable: true
  signer:
    description: |
      A unique ID of the signer. 
      Flussonic uses it to connect to the key server when using test key for Widevine DRM.
    externalDocs:
      description: Find more information here.
      url: https://flussonic.com/doc/content-protection-with-drm/widevine-drm/
    type: string
    nullable: true
  iv:
    description: |
      Initialization vector (IV) - an arbitrary number that can be used along with a secret key for data encryption. 
      It is employed only one time in any session.
      The use of an IV prevents repetition in data encryption, making it more difficult for a hacker to break a cipher. 

      Usually, IV is received from a DVR provider.
    type: string
    nullable: true
  secret:
    description: |
      A part of the keyserver's URL when using Solcoo DRM: `https://SITE.solocoo.tv/SITEadmintools/papi/SECRET/method`.
    externalDocs:
      description: Find more information here.
      url: https://flussonic.com/doc/content-protection-with-drm/solocoo-drm/ 
    type: string
    nullable: true
  site:
    description: |
      A part of the keyserver's URL when using Solcoo DRM: `https://SITE.solocoo.tv/SITEadmintools/papi/SECRET/method`.
    externalDocs:
      description: Find more information here.
      url: https://flussonic.com/doc/content-protection-with-drm/solocoo-drm/
    type: string
    nullable: true
  fp:
    description: |
      Whether to use FairPlay system for key generation. 
      If set to `false`, the requests for FairPlay encryption key are disabled.
      Used for Solocoo DRM.
    type: string
    nullable: true
  account_id:
    description: ID of the Irdeto DRM account. Ask your Irdeto manager for it.
    type: string
    nullable: true
  ic_host:
    description: A hostname of Irdeto DRM key server. Ask your Irdeto manager for it.
    type: string
    nullable: true
  password:
    description: A password for authorization of a user on a key server. Used for Irdeto DRM and EZDRM.
    type: string
    nullable: true
  user_name:
    description: A user name of the Irdeto DRM user. Ask your Irdeto manager for it.
    type: string
    nullable: true
  user:
    description: A user name for authorization of a user on a key server. Used for EZDRM.
    type: string
    nullable: true
  keyseed:
    description: |
      An arbitrary Base64-encoded string of 30 bytes. 
      It is used for PlayReady DRM and is necessary for PlayReady to create an encryption key.
    type: string
    nullable: true
  key_id:
    description: A key ID (hash code of a stream name) used for an encryption key generation. Used for PlayReady DRM.
    type: string
    nullable: true
    example: '6f651ae1-dbe4-4434-bcb4-690d1564c41c'
  userkey:
    description: |
      A unique identifier of the user in Buy DRM.
    type: string
    nullable: true
  enc_token:
    description: |
      An API authentication token that is generated when you sign up for the PallyCon service at https://login.pallycon.com/.
      Used for PallyCon DRM.
    type: string
    nullable: true
  user_path:
    description: A custom key server path for Conax DRM.
    type: string
    nullable: true
    example: '12345/nks/conax'
  dump_url:
    description: |
      Whether the requested encryption URL is logged. 
    type: boolean
    nullable: true
  save_template:
    x-private: true
    description: |
      A path to the file to save the request to the keyserver or the response from the keyserver.
      It can contain the following placeholders:

      * `$kind$` - the type of request (`hls` or `dash), used for EZDRM.
      * `$number$` - the key number.
      * `$now$` - current time in UTC format.
      * `$name$` - stream name.
      * `$vendor$` - DRM provider.
      * `$type$` - request or response.
    type: string
    nullable: true
    example: 'save_template=/var/log/flussonic/drm/$name$-$type$-$now$.xml'
  hls_ext_x_key_iv:
    description: |
      This parameter is used for encryption of HLS streams.
      For successful playback of an AES128 encrypted HLS streams on some modern devices (running on Tizen 5), 
      set this pareameter to `false`.
    type: boolean
    nullable: true
  systems:
    description: |
      This parameter is used for Conax DRM for Nagra Security Services Platform.

      If you turned off some of the systems (FairPlay, PlayReady, or Widevine) in your Nagra account, you should specify the systems that remain in use. 
      Otherwise, an error will occur in Conax, and it will be impossible to play the stream.
    externalDocs:
      description: Find more information here.
      url: https://flussonic.com/doc/content-protection-with-drm/conax-drm-for-nagra-security-services-platform/#configuring-the-drm-systems-in-use
    items:
      allOf:
      - $ref: '../../schemas.yml#/drm_system'
    type: array
    nullable: true
  la_url:
    description: License URL, used for PlayReady DRM.
    type: string
    format: url
    nullable: true
required:
- vendor
